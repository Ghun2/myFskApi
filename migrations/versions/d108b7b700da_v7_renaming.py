"""v7 renaming

Revision ID: d108b7b700da
Revises: 2bd75b0be059
Create Date: 2019-08-06 14:18:07.738607

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'd108b7b700da'
down_revision = '2bd75b0be059'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Daily', sa.Column('actual_pay', sa.Integer(), nullable=True))
    op.add_column('Daily', sa.Column('contract_pay', sa.Integer(), nullable=True))
    op.add_column('Daily', sa.Column('holiday_pay', sa.Integer(), nullable=True))
    op.add_column('Daily', sa.Column('holiday_time', sa.Time(), nullable=True))
    op.add_column('Daily', sa.Column('night_pay', sa.Integer(), nullable=True))
    op.add_column('Daily', sa.Column('night_time', sa.Time(), nullable=True))
    op.add_column('Daily', sa.Column('over_pay', sa.Integer(), nullable=True))
    op.add_column('Daily', sa.Column('over_time', sa.Time(), nullable=True))
    op.add_column('Daily', sa.Column('tardy_pay', sa.Integer(), nullable=True))
    op.add_column('Daily', sa.Column('tardy_time', sa.Time(), nullable=True))
    op.add_column('Daily', sa.Column('total_pay', sa.Integer(), nullable=True))
    op.drop_column('Daily', 'holiday_work_pay')
    op.drop_column('Daily', 'total_work_pay')
    op.drop_column('Daily', 'holiday_work_time')
    op.drop_column('Daily', 'actual_work_pay')
    op.drop_column('Daily', 'over_work_pay')
    op.drop_column('Daily', 'night_work_time')
    op.drop_column('Daily', 'contract_work_pay')
    op.drop_column('Daily', 'night_work_pay')
    op.drop_column('Daily', 'over_work_time')
    op.add_column('Monthly', sa.Column('actual_mpay', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('actual_rest_mtime', sa.Time(), nullable=True))
    op.add_column('Monthly', sa.Column('contract_mpay', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('employment_ins', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('final_pay', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('health_ins', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('holiday_mpay', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('holiday_mtime', sa.Time(), nullable=True))
    op.add_column('Monthly', sa.Column('nat_pension', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('night_mpay', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('night_mtime', sa.Time(), nullable=True))
    op.add_column('Monthly', sa.Column('over_mpay', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('over_mtime', sa.Time(), nullable=True))
    op.add_column('Monthly', sa.Column('tardy_mpay', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('tardy_mtime', sa.Time(), nullable=True))
    op.add_column('Monthly', sa.Column('tax_exempt', sa.Integer(), nullable=True))
    op.add_column('Monthly', sa.Column('total_mpay', sa.Integer(), nullable=True))
    op.drop_constraint('monthly_ibfk_1', 'Monthly', type_='foreignkey')
    op.create_foreign_key(None, 'Monthly', 'WorkContract', ['cont_id'], ['cont_id'])
    op.drop_column('Monthly', 'employment_insurance')
    op.drop_column('Monthly', 'actual_work_mpay')
    op.drop_column('Monthly', 'night_work_mpay')
    op.drop_column('Monthly', 'over_work_mpay')
    op.drop_column('Monthly', 'total_work_mpay')
    op.drop_column('Monthly', 'actual_rest_time')
    op.drop_column('Monthly', 'night_work_mtime')
    op.drop_column('Monthly', 'health_insurance')
    op.drop_column('Monthly', 'tax_exemption')
    op.drop_column('Monthly', 'holiday_work_mpay')
    op.drop_column('Monthly', 'after_deduction')
    op.drop_column('Monthly', 'holiday_work_mtime')
    op.drop_column('Monthly', 'over_work_mtime')
    op.drop_column('Monthly', 'national_pension')
    op.drop_column('Monthly', 'contract_work_mpay')
    op.add_column('Weekly', sa.Column('holy_dnum', sa.Integer(), nullable=True))
    op.add_column('Weekly', sa.Column('total_pay', sa.Integer(), nullable=True))
    op.add_column('Weekly', sa.Column('total_time', sa.Time(), nullable=True))
    op.add_column('Weekly', sa.Column('weekly_pay', sa.Integer(), nullable=True))
    op.drop_constraint('weekly_ibfk_1', 'Weekly', type_='foreignkey')
    op.create_foreign_key(None, 'Weekly', 'WorkContract', ['cont_id'], ['cont_id'])
    op.drop_column('Weekly', 'week_holy_dnum')
    op.drop_column('Weekly', 'total_work_time')
    op.drop_column('Weekly', 'week_holy_pay')
    op.drop_column('Weekly', 'total_work_pay')
    op.add_column('WorkCondition', sa.Column('end_time', sa.Time(), nullable=True))
    op.add_column('WorkCondition', sa.Column('rest_aot', sa.Time(), nullable=True))
    op.add_column('WorkCondition', sa.Column('start_time', sa.Time(), nullable=True))
    op.add_column('WorkCondition', sa.Column('tardy_code', sa.Integer(), server_default='1', nullable=False))
    op.add_column('WorkCondition', sa.Column('work_aot', sa.Time(), nullable=True))
    op.drop_constraint('workcondition_ibfk_1', 'WorkCondition', type_='foreignkey')
    op.create_foreign_key(None, 'WorkCondition', 'WorkContract', ['cont_id'], ['cont_id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_column('WorkCondition', 'tardiness_code')
    op.drop_column('WorkCondition', 'start_work_time')
    op.drop_column('WorkCondition', 'amount_rest_time')
    op.drop_column('WorkCondition', 'amount_work_time')
    op.drop_column('WorkCondition', 'end_work_time')
    op.add_column('WorkContract', sa.Column('day_cnt', sa.Integer(), nullable=True))
    op.add_column('WorkContract', sa.Column('first_date', sa.String(length=8), nullable=True))
    op.add_column('WorkContract', sa.Column('pinit_day', sa.Integer(), server_default='1', nullable=True))
    op.add_column('WorkContract', sa.Column('time_offset', sa.Time(), server_default='00:05:00', nullable=True))
    op.drop_constraint('workcontract_ibfk_2', 'WorkContract', type_='foreignkey')
    op.drop_constraint('workcontract_ibfk_1', 'WorkContract', type_='foreignkey')
    op.create_foreign_key(None, 'WorkContract', 'User', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'WorkContract', 'WorkPlace', ['wp_id'], ['wp_id'])
    op.drop_column('WorkContract', 'pay_init_day')
    op.drop_column('WorkContract', 'first_start_date')
    op.drop_column('WorkContract', 'work_day_cnt')
    op.drop_column('WorkContract', 'work_time_offset')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('WorkContract', sa.Column('work_time_offset', mysql.TIME(), server_default=sa.text("'00:05:00'"), nullable=True))
    op.add_column('WorkContract', sa.Column('work_day_cnt', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('WorkContract', sa.Column('first_start_date', mysql.VARCHAR(length=8), nullable=True))
    op.add_column('WorkContract', sa.Column('pay_init_day', mysql.INTEGER(display_width=11), server_default=sa.text("'1'"), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'WorkContract', type_='foreignkey')
    op.drop_constraint(None, 'WorkContract', type_='foreignkey')
    op.create_foreign_key('workcontract_ibfk_1', 'WorkContract', 'user', ['user_id'], ['user_id'])
    op.create_foreign_key('workcontract_ibfk_2', 'WorkContract', 'workplace', ['wp_id'], ['wp_id'])
    op.drop_column('WorkContract', 'time_offset')
    op.drop_column('WorkContract', 'pinit_day')
    op.drop_column('WorkContract', 'first_date')
    op.drop_column('WorkContract', 'day_cnt')
    op.add_column('WorkCondition', sa.Column('end_work_time', mysql.TIME(), nullable=True))
    op.add_column('WorkCondition', sa.Column('amount_work_time', mysql.TIME(), nullable=True))
    op.add_column('WorkCondition', sa.Column('amount_rest_time', mysql.TIME(), nullable=True))
    op.add_column('WorkCondition', sa.Column('start_work_time', mysql.TIME(), nullable=True))
    op.add_column('WorkCondition', sa.Column('tardiness_code', mysql.INTEGER(display_width=11), server_default=sa.text("'1'"), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'WorkCondition', type_='foreignkey')
    op.create_foreign_key('workcondition_ibfk_1', 'WorkCondition', 'workcontract', ['cont_id'], ['cont_id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_column('WorkCondition', 'work_aot')
    op.drop_column('WorkCondition', 'tardy_code')
    op.drop_column('WorkCondition', 'start_time')
    op.drop_column('WorkCondition', 'rest_aot')
    op.drop_column('WorkCondition', 'end_time')
    op.add_column('Weekly', sa.Column('total_work_pay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Weekly', sa.Column('week_holy_pay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Weekly', sa.Column('total_work_time', mysql.TIME(), nullable=True))
    op.add_column('Weekly', sa.Column('week_holy_dnum', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'Weekly', type_='foreignkey')
    op.create_foreign_key('weekly_ibfk_1', 'Weekly', 'workcontract', ['cont_id'], ['cont_id'])
    op.drop_column('Weekly', 'weekly_pay')
    op.drop_column('Weekly', 'total_time')
    op.drop_column('Weekly', 'total_pay')
    op.drop_column('Weekly', 'holy_dnum')
    op.add_column('Monthly', sa.Column('contract_work_mpay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('national_pension', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('over_work_mtime', mysql.TIME(), nullable=True))
    op.add_column('Monthly', sa.Column('holiday_work_mtime', mysql.TIME(), nullable=True))
    op.add_column('Monthly', sa.Column('after_deduction', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('holiday_work_mpay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('tax_exemption', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('health_insurance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('night_work_mtime', mysql.TIME(), nullable=True))
    op.add_column('Monthly', sa.Column('actual_rest_time', mysql.TIME(), nullable=True))
    op.add_column('Monthly', sa.Column('total_work_mpay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('over_work_mpay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('night_work_mpay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('actual_work_mpay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Monthly', sa.Column('employment_insurance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'Monthly', type_='foreignkey')
    op.create_foreign_key('monthly_ibfk_1', 'Monthly', 'workcontract', ['cont_id'], ['cont_id'])
    op.drop_column('Monthly', 'total_mpay')
    op.drop_column('Monthly', 'tax_exempt')
    op.drop_column('Monthly', 'tardy_mtime')
    op.drop_column('Monthly', 'tardy_mpay')
    op.drop_column('Monthly', 'over_mtime')
    op.drop_column('Monthly', 'over_mpay')
    op.drop_column('Monthly', 'night_mtime')
    op.drop_column('Monthly', 'night_mpay')
    op.drop_column('Monthly', 'nat_pension')
    op.drop_column('Monthly', 'holiday_mtime')
    op.drop_column('Monthly', 'holiday_mpay')
    op.drop_column('Monthly', 'health_ins')
    op.drop_column('Monthly', 'final_pay')
    op.drop_column('Monthly', 'employment_ins')
    op.drop_column('Monthly', 'contract_mpay')
    op.drop_column('Monthly', 'actual_rest_mtime')
    op.drop_column('Monthly', 'actual_mpay')
    op.add_column('Daily', sa.Column('over_work_time', mysql.TIME(), nullable=True))
    op.add_column('Daily', sa.Column('night_work_pay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Daily', sa.Column('contract_work_pay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Daily', sa.Column('night_work_time', mysql.TIME(), nullable=True))
    op.add_column('Daily', sa.Column('over_work_pay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Daily', sa.Column('actual_work_pay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Daily', sa.Column('holiday_work_time', mysql.TIME(), nullable=True))
    op.add_column('Daily', sa.Column('total_work_pay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('Daily', sa.Column('holiday_work_pay', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_column('Daily', 'total_pay')
    op.drop_column('Daily', 'tardy_time')
    op.drop_column('Daily', 'tardy_pay')
    op.drop_column('Daily', 'over_time')
    op.drop_column('Daily', 'over_pay')
    op.drop_column('Daily', 'night_time')
    op.drop_column('Daily', 'night_pay')
    op.drop_column('Daily', 'holiday_time')
    op.drop_column('Daily', 'holiday_pay')
    op.drop_column('Daily', 'contract_pay')
    op.drop_column('Daily', 'actual_pay')
    # ### end Alembic commands ###
